diff --git a/src/Avro/Datum/IODatumWriter.php b/src/Avro/Datum/IODatumWriter.php
index c868909..c9ab2c3 100644
--- a/src/Avro/Datum/IODatumWriter.php
+++ b/src/Avro/Datum/IODatumWriter.php
@@ -153,9 +153,12 @@ class IODatumWriter
 
     private function write_record(Schema $writers_schema, $datum, IOBinaryEncoder $encoder)
     {
-        foreach ($writers_schema->fields() as $field)
-            $this->write_data($field->type(), $datum[$field->name()], $encoder);
+        foreach ($writers_schema->fields() as $field) {
+            /* Patched to supply a default value with a field isn't set. */
+            $value = isset($datum[$field->name()]) ? $datum[$field->name()] : $field->default_value();
+            $this->write_data($field->type(), $value, $encoder);
+        }
     }
 
     /**#@-*/
-}
\ No newline at end of file
+}
diff --git a/src/Avro/IO/StringIO.php b/src/Avro/IO/StringIO.php
index 0158f7d..8716b60 100644
--- a/src/Avro/IO/StringIO.php
+++ b/src/Avro/IO/StringIO.php
@@ -53,7 +53,8 @@ class StringIO extends IO
     public function write($arg)
     {
         $this->check_closed();
-        if (is_string($arg))
+        /* Patched to allow integers. */
+        if (is_string($arg) || is_int($arg))
             return $this->append_str($arg);
         throw new IOException(
             sprintf('write argument must be a string: (%s) %s',
@@ -221,4 +222,4 @@ class StringIO extends IO
     {
         return $this->is_closed;
     }
-}
\ No newline at end of file
+}
diff --git a/src/Avro/Schema/Schema.php b/src/Avro/Schema/Schema.php
index b384f6b..1e253fa 100644
--- a/src/Avro/Schema/Schema.php
+++ b/src/Avro/Schema/Schema.php
@@ -369,7 +369,8 @@ class Schema
                 if (is_array($datum))
                 {
                     foreach ($datum as $k => $v)
-                        if (!is_string($k)
+                        /* Patched to allow integers.  */
+                        if ((!is_string($k) && !is_int($k))
                             || !self::is_valid_datum($expected_schema->values(), $v))
                             return false;
                     return true;
@@ -462,4 +463,4 @@ class Schema
      */
     public function attribute($attribute) { return $this->$attribute(); }
 
-}
\ No newline at end of file
+}
